{"version":3,"sources":["spinner.svg","ButtonGame.js","App.js","index.js"],"names":["Tezos","TezosToolkit","wallet","BeaconWallet","name","setWalletProvider","ButtonGame","accAddress","useState","secondsLeft","setSecondsLeft","minute","setMinute","second","setSecond","lastClick","setLastClick","prize","setPrize","lastClicker","setLastClicker","colors","setColors","gameState","setGameState","axios","get","response","console","log","data","millis","Date","seconds","Math","floor","balanceRes","operationFee","clickerRes","clickCounter","value","colorsRes","useEffect","now","interval","setInterval","clearInterval","getStorage","style","marginBottom","display","justifyContent","alignItems","fontSize","backgroundColor","address","i","length","key","getColor","padding","color","margin","marginInline","paddingRight","class","onClick","fetch","method","headers","textAlign","Button","contractAddress","App","activeAccount","setActiveAccount","React","post","setPost","posts","setPosts","loading","sync","client","requestPermissions","network","type","NetworkType","MAINNET","rpcUrl","permissions","getActiveAccount","unsync","clearActiveAccount","getAcc","reverse","getposts","width","marginTop","TextField","label","variant","onChange","event","target","fullWidth","alt","src","spinner","map","author","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd96a085.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.d99b4eae.svg\";","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport './ButtonGame.css';\n\nimport axios from 'axios';\nimport { Button } from \"@material-ui/core\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\n\nconst Tezos = new TezosToolkit(\"https://mainnet-tezos.giganode.io\");\nconst wallet = new BeaconWallet({ name: \"Beacon Docs Taquito\" });\n\nTezos.setWalletProvider(wallet);\n\nexport const ButtonGame = ({ accAddress }) => {\n  //1660042341\n\n  const [secondsLeft, setSecondsLeft] = useState(1000);\n\n  const [minute, setMinute] = useState(12);\n  const [second, setSecond] = useState(59);\n\n  const [lastClick, setLastClick] = useState(1660042341);\n\n  const [prize, setPrize] = useState(0);\n  const [lastClicker, setLastClicker] = useState(0);\n  const [colors, setColors] = useState([]);\n\n  const [gameState, setGameState] = useState(-1);\n\n  useEffect(() => {\n    let millis = Date.now();\n    let seconds = Math.floor(millis / 1000);\n    console.log(seconds)\n    let secLeft = lastClick + 3600 - seconds;\n    setSecondsLeft(secLeft)\n  }, [lastClick]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setSecondsLeft(secondsLeft => secondsLeft - 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [secondsLeft]);\n\n  useEffect(() => {\n    setMinute(Math.floor(secondsLeft / 60))\n    setSecond(secondsLeft % 60)\n  }, [secondsLeft]);\n\n  async function getStorage() {\n    const response = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob/storage`\n    );\n\n    console.log(response.data)\n\n    const millis = new Date(response.data.lastClick);\n    let seconds = Math.floor(millis / 1000);\n    console.log(seconds)\n\n    const balanceRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/accounts/KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob/balance`\n    );\n\n    console.log(balanceRes.data - response.data.operationFee)\n    setPrize(balanceRes.data - response.data.operationFee)\n    setLastClick(seconds)\n    setGameState(response.data.gameState)\n\n    const clickerRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob/bigmaps/clickers/keys`\n    );\n    if (clickerRes && clickerRes.data && clickerRes.data[response.data.clickCounter - 1])\n      setLastClicker((clickerRes.data[response.data.clickCounter - 1]).value)\n\n    const colorsRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob/bigmaps/colors/keys`\n    );\n    setColors(colorsRes.data)\n    console.log(colorsRes.data)\n  }\n\n  useEffect(() => {\n    getStorage();\n  }, []);\n\n  function getColor(address) {\n    console.log(\"test performance\")\n    for (let i = 0; i < colors.length; i++) {\n      if (colors[i].key === address) {\n        return colors[i].value;\n      }\n    }\n    return \"gray\"\n  }\n\n  return (\n    <div style={{ marginBottom: 100 }}>\n      {gameState == 1 && secondsLeft > 0 &&\n        <>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div>\n                <h1 style={{ fontSize: \"2em\" }}>{minute < 10 ? \"0\" + minute : minute}:{second < 10 ? \"0\" + second : second} </h1>\n                <b style={{ backgroundColor: getColor(lastClicker), padding: 10, color: \"black\" }}> {lastClicker}</b>\n              </div>\n            </div>\n            <div style={{ margin: 50, marginInline: 200, paddingRight: \"10%\" }}>\n\n              <div class=\"buttn\" onClick={\n                async () => {\n                  console.log(\"dont push the button !\")\n\n                  const fetchRes = await fetch(`https://onchain-onboard.herokuapp.com/users/game/click/${accAddress}`, {\n                    method: 'GET',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    }\n                  });\n                }}>\n              </div>\n            </div>\n\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <h1 style={{ fontSize: \"2em\" }}>Prize: {prize / 1000000} XTZ </h1>\n            </div>\n          </div>\n          <div style={{ fontSize: \"2em\", textAlign: \"center\" }}>Press = 1 xtz</div>\n        </>\n      }\n\n      {gameState == 1 && secondsLeft <= 0 &&\n        <Button onClick={\n          async () => {\n            console.log(\"dont push the button !\")\n\n            const fetchRes = await fetch(`https://onchain-onboard.herokuapp.com/users/game/conclude`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n          }\n        }>conclude game</Button>\n      }\n      {\n        gameState == 0 && <div>\n\n          <Button onClick={\n            async () => {\n              console.log(\"dont push the button !\")\n\n              const fetchRes = await fetch(`https://onchain-onboard.herokuapp.com/users/game/start`, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            }\n          }>start game</Button>\n        </div>\n      }\n\n    </div>\n  );\n}\n\n","\nimport './App.css';\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport spinner from './spinner.svg';\nimport { ButtonGame } from \"./ButtonGame\";\n\nconst Tezos = new TezosToolkit(\"https://mainnet-tezos.giganode.io\");\nconst wallet = new BeaconWallet({ name: \"Beacon Docs Taquito\" });\nconst contractAddress = \"KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob\";\n\nTezos.setWalletProvider(wallet);\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n\n  const [post, setPost] = React.useState(\"\");\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const [colors, setColors] = useState([]);\n\n  const handleChange = (event) => {\n    if (event.target.value.length < 510) {\n      setPost(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await wallet.client.getActiveAccount());\n      if (activeAccount) {\n        console.log(activeAccount.address)\n        setActiveAccount(await wallet.client.getActiveAccount());\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  useEffect(() => {\n    async function getposts() {\n      const response = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/${contractAddress}/bigmaps/posts/keys`\n      );\n      const data = response.data.reverse();\n      console.log(data)\n\n      setPosts(data)\n    }\n    getposts();\n    async function getStorage() {\n\n      const colorsRes = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/KT1Ji1mHYiWjpCzQq3nGFWzDfJNrpcwwCtob/bigmaps/colors/keys`\n      );\n      setColors(colorsRes.data)\n      console.log(colorsRes.data)\n    }\n    getStorage();\n  }, []);\n\n  async function sync() {\n\n    try {\n      const permissions = await wallet.client.requestPermissions({\n        network: {\n          type: NetworkType.MAINNET,\n          name: \"onboard\",\n          rpcUrl: \"https://mainnet-tezos.giganode.io/\",\n        },\n      });\n      console.log(\"Got permissions:\", permissions.address);\n      setActiveAccount(await wallet.client.getActiveAccount());\n    } catch (error) {\n      console.log(\"Got error:\", error);\n    }\n  }\n\n  async function unsync() {\n    await wallet.clearActiveAccount();\n    setActiveAccount(await wallet.client.getActiveAccount());\n  }\n\n  function getColor(address) {\n    console.log(\"test performance\")\n    for (let i = 0; i < colors.length; i++) {\n      if (colors[i].key === address) {\n        return colors[i].value;\n      }\n    }\n    return \"gray\"\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          onClick={async () => {\n          }}\n        >\n          ONChain\n        </Button>\n\n        <Button\n          onClick={async () => {\n            if (activeAccount) {\n              unsync()\n            } else {\n              sync()\n            }\n          }}\n        >\n          {activeAccount ? \"unsync\" : \"sync\"}\n        </Button>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\n        <div style={{ width: \"70vw\", marginTop: 20 }}>\n          <ButtonGame accAddress={activeAccount ? activeAccount.address : \"\"} ></ButtonGame>\n          <div>\n            <TextField\n              label=\"Type here\"\n              variant=\"outlined\"\n              value={post}\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <Button\n              fullWidth\n              onClick={async () => {\n\n                const fetchRes = await fetch(`https://onchain-onboard.herokuapp.com/users/social/post/${post}&${activeAccount.address}`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              }}\n\n\n            >\n              {loading ? <img alt=\"loading\" src={spinner} style={{ width: 60 }} ></img> : \"Post\"}\n            </Button>\n\n            <div>\n              <br></br>\n              {posts &&\n                posts.map((post) => (\n                  <div key={post.key}>\n                    {post.value.post}\n                    <br></br>\n                    <div style={{ textAlign: \"right\" }}>\n                      <b style={{ color: \"black\", textAlign: \"right\", backgroundColor: getColor(post.value.author), padding: 10 }}>{post.value.author}</b>\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n\n                ))\n              }\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}